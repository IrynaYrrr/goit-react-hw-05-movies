{"version":3,"file":"static/js/278.8f5e7db0.chunk.js","mappings":"uRAEaA,EAAkB,mCAAG,uGACTC,EAAAA,EAAAA,GAAM,CAC3BC,OAAQ,MACRC,IAAK,mEACLC,QAAQ,CACNC,cAAe,6NACfC,OAAQ,sBANoB,uBACxBC,EADwB,EACxBA,KADwB,kBASzBA,GATyB,2CAAH,qDAYlBC,EAAO,mCAAG,WAAOC,GAAP,0FACER,EAAAA,EAAAA,GAAM,CAC3BC,OAAQ,MACRC,IAAI,sCAAD,OAAwCM,EAAxC,4BACHL,QAAQ,CACNC,cAAe,6NACfC,OAAQ,sBANS,uBACbC,EADa,EACbA,KADa,kBASdA,GATc,2CAAH,sDAYPG,EAAU,mCAAG,WAAOD,GAAP,0FACDR,EAAAA,EAAAA,GAAM,CAC3BC,OAAQ,MACRC,IAAI,sCAAD,OAAwCM,EAAxC,kCACHL,QAAQ,CACNC,cAAe,6NACfC,OAAQ,sBANY,uBAChBC,EADgB,EAChBA,KADgB,kBASjBA,GATiB,2CAAH,sDAYVI,EAAgB,mCAAG,WAAOC,GAAP,0FACPX,EAAAA,EAAAA,GAAM,CAC3BC,OAAQ,MACRC,IAAI,mDAAD,OAAqDS,EAArD,8CACHR,QAAQ,CACNC,cAAe,6NACfC,OAAQ,sBANkB,uBACtBC,EADsB,EACtBA,KADsB,kBASvBA,GATuB,2CAAH,qD,iGCI7B,IAtCmB,SAAC,GAAe,IAAbK,EAAY,EAAZA,MAEpB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAcC,GAAd,WACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAEMC,GAAaC,EAAAA,EAAAA,cAAW,iBAAC,gGAE3BJ,GAAa,GACbE,EAAS,OACIN,EAJc,iCAIDD,EAAAA,EAAAA,IAAiBC,GAJhB,4DAI+BZ,EAAAA,EAAAA,MAJ/B,4BAIrBO,EAJqB,KAK3BW,EAASX,EAAKc,SALa,kDAO3BP,EAAS,KAAMQ,SAASf,MAPG,yBAS3BS,GAAa,GATc,6EAW5B,CAACJ,IAMJ,OAJAW,EAAAA,EAAAA,YAAU,WACRJ,GACD,GAAE,CAACA,KAGF,4BACE,2CACCJ,IAAa,wCACd,wBACGE,GAASA,EAAMO,KAAI,SAACC,GAAD,OAClB,eAAIC,MAAO,CAAEC,cAAe,QAA5B,UACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,EAAKI,IAAMC,MAAOL,EAAvC,SAA8CA,EAAKM,kBADVN,EAAKI,GAD9B,QAQ3B,C,6ECAD,UApCe,WAAO,IAAD,EACnB,GAA0BhB,EAAAA,EAAAA,UAAS,IAAnC,eAAOD,EAAP,KAAcoB,EAAd,KACD,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAW,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,GAgBjD,OALAd,EAAAA,EAAAA,YAAU,WACRa,GAAeJ,EAASI,EAEzB,GAAE,KAGD,kBAAME,SAXa,SAACC,GACtBA,EAAEC,iBACFR,EAASI,EACT,EAQE,WACE,kBACDK,KAAK,QACLC,KAAK,OACLC,SAnBiB,SAAC,GAA2B,IAAfC,EAAc,EAAxBC,OAAUD,MACzBT,EAARS,EAAwB,CAAEE,OAAQF,GAA2B,CAAC,EAC9D,EAkBGG,UAAU,eACVlB,GAAG,mBACHe,MAAOR,KAEN,uCACCxB,IAAS,SAAC,IAAD,CAAYA,MAAOA,MAGlC,C","sources":["api/getFilms.jsx","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const getCollectionFilms = async () => {\n  const { data } = await axios({\n    method: \"get\",\n    url: \"https://api.themoviedb.org/3/movie/popular?language=en-US&page=1\",\n    headers:{\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYWRmOTEyZTExNzZhMTg1M2MxMzU2ZGI3MmFjMmFkYSIsInN1YiI6IjY1MmMwYWJjNzJjMTNlMDEzZDE1YzUzZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.hzf05Uu31G7_NhpUWVecKABBc5ROUSkbQVOs-Yw6zYQ',\n      Accept: 'application/json'\n    }\n  })\n  return data\n}\n\nexport const getCast = async (movieId) => {\n  const { data } = await axios({\n    method: \"get\",\n    url: `https://api.themoviedb.org/3/movie/${movieId}}/credits?language=en-US`,\n    headers:{\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYWRmOTEyZTExNzZhMTg1M2MxMzU2ZGI3MmFjMmFkYSIsInN1YiI6IjY1MmMwYWJjNzJjMTNlMDEzZDE1YzUzZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.hzf05Uu31G7_NhpUWVecKABBc5ROUSkbQVOs-Yw6zYQ',\n      Accept: 'application/json'\n    }\n  })\n  return data\n}\n\nexport const getReviews = async (movieId) => {\n  const { data } = await axios({\n    method: \"get\",\n    url: `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n    headers:{\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYWRmOTEyZTExNzZhMTg1M2MxMzU2ZGI3MmFjMmFkYSIsInN1YiI6IjY1MmMwYWJjNzJjMTNlMDEzZDE1YzUzZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.hzf05Uu31G7_NhpUWVecKABBc5ROUSkbQVOs-Yw6zYQ',\n      Accept: 'application/json'\n    }\n  })\n  return data\n}\n\nexport const getFilmsBySearch = async (query) => {\n  const { data } = await axios({\n    method: \"get\",\n    url: `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    headers:{\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYWRmOTEyZTExNzZhMTg1M2MxMzU2ZGI3MmFjMmFkYSIsInN1YiI6IjY1MmMwYWJjNzJjMTNlMDEzZDE1YzUzZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.hzf05Uu31G7_NhpUWVecKABBc5ROUSkbQVOs-Yw6zYQ',\n      Accept: 'application/json'\n    }\n  })\n  return data\n}\n","import { getCollectionFilms, getFilmsBySearch } from 'api/getFilms'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nconst MoviesList = ({ query }) => {\n  // eslint-disable-next-line no-unused-vars\n  const [error, setError] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [films, setFilms] = useState(null)\n\n  const fetchFilms = useCallback(async () => {\n    try {\n      setIsLoading(true)\n      setFilms(null)\n      const data = query?(await getFilmsBySearch(query)):(await getCollectionFilms())\n      setFilms(data.results)\n    } catch (error) {\n      setError(error.response.data)\n    } finally {\n      setIsLoading(false)\n    }\n  }, [query])\n\n  useEffect(() => {\n    fetchFilms()\n  }, [fetchFilms])\n\n  return (\n    <div>\n      <h1>Trending today</h1>\n      {isLoading && <h1>Loading...</h1>}\n      <ul>\n        {films && films.map((film) => (\n          <li style={{ listStyleType: 'none' }} key={film.id}>\n            <Link to={`/movies/${film.id}`} state={film}>{film.original_title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default MoviesList\n","import MoviesList from 'components/MoviesList/MoviesList'\nimport React, { useEffect, useState } from 'react'\nimport { useSearchParams } from 'react-router-dom'\n\nconst Movies = () => {\n  const [query, setQuery] = useState('')\n\tconst [searchParams, setSearchParams] = useSearchParams()\n\n\tconst searchQuery = searchParams.get('search') ?? ''\n\n\tconst handleChange = ({ target: { value } }) => {\n\t\tvalue ? setSearchParams({ search: value }) : setSearchParams({})\n\t}\n\n  const handleSubmit = (e) => {\n\t\te.preventDefault()\n\t\tsetQuery(searchQuery)\n\t}\n\n  useEffect(() => {\n    searchQuery && setQuery(searchQuery)\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n\t\t\t\t\tname='title'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tclassName='form-control'\n\t\t\t\t\tid='exampleInputTodo'\n\t\t\t\t\tvalue={searchQuery}\n\t\t\t\t/>\n      <button>Search</button>\n      {query && <MoviesList query={query}/> }\n    </form>\n  )\n}\n\nexport default Movies\n"],"names":["getCollectionFilms","axios","method","url","headers","Authorization","Accept","data","getCast","movieId","getReviews","getFilmsBySearch","query","useState","setError","isLoading","setIsLoading","films","setFilms","fetchFilms","useCallback","results","response","useEffect","map","film","style","listStyleType","to","id","state","original_title","setQuery","useSearchParams","searchParams","setSearchParams","searchQuery","get","onSubmit","e","preventDefault","name","type","onChange","value","target","search","className"],"sourceRoot":""}