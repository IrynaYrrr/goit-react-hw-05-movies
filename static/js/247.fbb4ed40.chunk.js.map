{"version":3,"file":"static/js/247.fbb4ed40.chunk.js","mappings":"+PAEaA,EAAkB,mCAAG,uGACTC,EAAAA,EAAAA,GAAM,CAC3BC,OAAQ,MACRC,IAAK,mEACLC,QAAQ,CACNC,cAAe,6NACfC,OAAQ,sBANoB,uBACxBC,EADwB,EACxBA,KADwB,kBASzBA,GATyB,2CAAH,qDAYlBC,EAAO,mCAAG,WAAOC,GAAP,0FACER,EAAAA,EAAAA,GAAM,CAC3BC,OAAQ,MACRC,IAAI,sCAAD,OAAwCM,EAAxC,4BACHL,QAAQ,CACNC,cAAe,6NACfC,OAAQ,sBANS,uBACbC,EADa,EACbA,KADa,kBASdA,GATc,2CAAH,sDAYPG,EAAU,mCAAG,WAAOD,GAAP,0FACDR,EAAAA,EAAAA,GAAM,CAC3BC,OAAQ,MACRC,IAAI,sCAAD,OAAwCM,EAAxC,kCACHL,QAAQ,CACNC,cAAe,6NACfC,OAAQ,sBANY,uBAChBC,EADgB,EAChBA,KADgB,kBASjBA,GATiB,2CAAH,qD,yGC6BvB,UAnDa,WAEX,OAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAcC,GAAd,WACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAAwBH,EAAAA,EAAAA,UAAS,MAAjC,eAAOI,EAAP,KAAaC,EAAb,KAIQC,GAFSC,EAAAA,EAAAA,MAEOC,MAAhBF,GAKFG,GAAYC,EAAAA,EAAAA,aAAW,mCAAC,WAAOJ,GAAP,uFAE1BH,GAAa,GACbE,EAAQ,MAHkB,UAIPR,EAAAA,EAAAA,IAAQS,GAJD,OAIpBV,EAJoB,OAK1BS,EAAQT,EAAKQ,MALa,gDAO1BH,EAAS,KAAMU,SAASf,MAPE,yBAS1BO,GAAa,GATa,4EAAD,sDAW1B,IAMH,OAJAS,EAAAA,EAAAA,YAAU,WACRH,EAAUH,EACX,GAAE,CAACG,EAAWH,KAGb,2BACGJ,IAAa,wCACd,wBACGE,GAAQA,EAAKS,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWV,EAAlC,EAAkCA,GAAlC,OAChB,eAAIW,MAAO,CAAEC,cAAe,QAA5B,SAEIJ,IACG,4BACD,gBAAKK,IA7BF,kDA6BkBL,EAAcM,IAAI,MAAMH,MAAO,CAAEI,MAAO,UAC7D,wBAAKN,KACL,uBAAIC,QANiCV,EAD3B,QAezB,C","sources":["api/getFilms.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const getCollectionFilms = async () => {\n  const { data } = await axios({\n    method: \"get\",\n    url: \"https://api.themoviedb.org/3/movie/popular?language=en-US&page=1\",\n    headers:{\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYWRmOTEyZTExNzZhMTg1M2MxMzU2ZGI3MmFjMmFkYSIsInN1YiI6IjY1MmMwYWJjNzJjMTNlMDEzZDE1YzUzZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.hzf05Uu31G7_NhpUWVecKABBc5ROUSkbQVOs-Yw6zYQ',\n      Accept: 'application/json'\n    }\n  })\n  return data\n}\n\nexport const getCast = async (movieId) => {\n  const { data } = await axios({\n    method: \"get\",\n    url: `https://api.themoviedb.org/3/movie/${movieId}}/credits?language=en-US`,\n    headers:{\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYWRmOTEyZTExNzZhMTg1M2MxMzU2ZGI3MmFjMmFkYSIsInN1YiI6IjY1MmMwYWJjNzJjMTNlMDEzZDE1YzUzZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.hzf05Uu31G7_NhpUWVecKABBc5ROUSkbQVOs-Yw6zYQ',\n      Accept: 'application/json'\n    }\n  })\n  return data\n}\n\nexport const getReviews = async (movieId) => {\n  const { data } = await axios({\n    method: \"get\",\n    url: `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n    headers:{\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYWRmOTEyZTExNzZhMTg1M2MxMzU2ZGI3MmFjMmFkYSIsInN1YiI6IjY1MmMwYWJjNzJjMTNlMDEzZDE1YzUzZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.hzf05Uu31G7_NhpUWVecKABBc5ROUSkbQVOs-Yw6zYQ',\n      Accept: 'application/json'\n    }\n  })\n  return data\n}\n\nexport const getFilmsBySearch = async (query) => {\n  const { data } = await axios({\n    method: \"get\",\n    url: `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    headers:{\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYWRmOTEyZTExNzZhMTg1M2MxMzU2ZGI3MmFjMmFkYSIsInN1YiI6IjY1MmMwYWJjNzJjMTNlMDEzZDE1YzUzZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.hzf05Uu31G7_NhpUWVecKABBc5ROUSkbQVOs-Yw6zYQ',\n      Accept: 'application/json'\n    }\n  })\n  return data\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { getCast } from 'api/getFilms'\n\nconst Cast = () => {\n  // eslint-disable-next-line no-unused-vars\n  const [error, setError] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [cast, setCast] = useState(null)\n\n  const location = useLocation()\n\n  const { id } = location.state;\n\n  const basePath = 'https://image.tmdb.org/t/p/w600_and_h900_bestv2';\n\n\n  const fetchCast = useCallback(async (id) => {\n    try {\n      setIsLoading(true)\n      setCast(null)\n      const data = await getCast(id)\n      setCast(data.cast)\n    } catch (error) {\n      setError(error.response.data)\n    } finally {\n      setIsLoading(false)\n    }\n  }, [])\n\n  useEffect(() => {\n    fetchCast(id)\n  }, [fetchCast, id])\n\n  return (\n    <div>\n      {isLoading && <h1>Loading...</h1>}\n      <ul>\n        {cast && cast.map(({ profile_path, name, character, id }) => (\n          <li style={{ listStyleType: 'none' }} key={id}>\n            {\n              profile_path\n              && <div>\n                <img src={basePath + profile_path} alt='...' style={{ width: '20%' }} />\n                <h3>{name}</h3>\n                <p>{character}</p>\n              </div>\n            }\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default Cast\n"],"names":["getCollectionFilms","axios","method","url","headers","Authorization","Accept","data","getCast","movieId","getReviews","useState","setError","isLoading","setIsLoading","cast","setCast","id","useLocation","state","fetchCast","useCallback","response","useEffect","map","profile_path","name","character","style","listStyleType","src","alt","width"],"sourceRoot":""}