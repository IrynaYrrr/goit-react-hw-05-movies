{"version":3,"file":"static/js/544.8d71d03b.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAAiD,6NAE1C,IAAMC,EAAkB,mCAAG,uGACTD,EAAAA,EAAAA,GAAM,CAC3BE,OAAQ,MACRC,IAAK,yCAHyB,uBACxBC,EADwB,EACxBA,KADwB,kBAKzBA,GALyB,2CAAH,qDAQlBC,EAAe,mCAAG,WAAOC,GAAP,0FACNN,EAAAA,EAAAA,GAAM,CAC3BE,OAAQ,MACRC,IAAI,UAAD,OAAYG,EAAZ,qBAHwB,uBACrBF,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,sDAQfG,EAAO,mCAAG,WAAOD,GAAP,0FACEN,EAAAA,EAAAA,GAAM,CAC3BE,OAAQ,MACRC,IAAI,UAAD,OAAYG,EAAZ,8BAHgB,uBACbF,EADa,EACbA,KADa,kBAKdA,GALc,2CAAH,sDAQPI,EAAU,mCAAG,WAAOF,GAAP,0FACDN,EAAAA,EAAAA,GAAM,CAC3BE,OAAQ,MACRC,IAAI,UAAD,OAAYG,EAAZ,oCAHmB,uBAChBF,EADgB,EAChBA,KADgB,kBAKjBA,GALiB,2CAAH,sDAQVK,EAAgB,mCAAG,WAAOC,GAAP,0FACPV,EAAAA,EAAAA,GAAM,CAC3BE,OAAQ,MACRC,IAAI,uBAAD,OAAyBO,EAAzB,gDAHyB,uBACtBN,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,qD,oDCpB7B,IAfmB,SAAC,GAAe,IAAbO,EAAY,EAAZA,MAEdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,GAASA,EAAMG,KAAI,SAACC,GAAD,OAClB,eAAIC,MAAO,CAAEC,cAAe,QAA5B,UACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,EAAKI,IAAMC,MAAO,CAAEC,KAAMT,GAA/C,SAA4DG,EAAKO,kBADxBP,EAAKI,GAD9B,KAOzB,C,yGC2BD,UAtCa,WAEX,OAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOZ,EAAP,KAAciB,EAAd,KAmBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAI,oGAEhBH,GAAa,GACbC,EAAS,MAHO,UAIG3B,EAAAA,EAAAA,MAJH,OAIVG,EAJU,OAKhBwB,EAASxB,EAAK2B,SALE,gDAOhBN,EAAS,KAAMO,SAAS5B,MAPR,yBAShBuB,GAAa,GATG,4EAAJ,qDAYhBG,GACD,GAAE,KAGD,gCACGN,IAAS,wBAAKA,IAGbE,GACI,qCACA,4BACA,4CACA,SAAC,IAAD,CAAYf,MAAOA,EAAOsB,UAAU,WAK/C,C","sources":["api/getFilms.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] = 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYWRmOTEyZTExNzZhMTg1M2MxMzU2ZGI3MmFjMmFkYSIsInN1YiI6IjY1MmMwYWJjNzJjMTNlMDEzZDE1YzUzZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.hzf05Uu31G7_NhpUWVecKABBc5ROUSkbQVOs-Yw6zYQ';\n\nexport const getCollectionFilms = async () => {\n  const { data } = await axios({\n    method: \"get\",\n    url: \"/movie/popular?language=en-US&page=1\",\n  })\n  return data\n}\n\nexport const getMovieDetails = async (movieId) => {\n  const { data } = await axios({\n    method: \"get\",\n    url: `/movie/${movieId}?language=en-US`,\n  })\n  return data\n}\n\nexport const getCast = async (movieId) => {\n  const { data } = await axios({\n    method: \"get\",\n    url: `/movie/${movieId}}/credits?language=en-US`,\n  })\n  return data\n}\n\nexport const getReviews = async (movieId) => {\n  const { data } = await axios({\n    method: \"get\",\n    url: `/movie/${movieId}/reviews?language=en-US&page=1`,\n  })\n  return data\n}\n\nexport const getFilmsBySearch = async (query) => {\n  const { data } = await axios({\n    method: \"get\",\n    url: `/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n  })\n  return data\n}\n","import { Link, useLocation } from 'react-router-dom'\n\nconst MoviesList = ({ films }) => {\n\n  const location = useLocation()\n\n  return (\n    <ul>\n      {films && films.map((film) => (\n        <li style={{ listStyleType: 'none' }} key={film.id}>\n          <Link to={`/movies/${film.id}`} state={{ from: location }}>{film.original_title}</Link>\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nexport default MoviesList\n","import { getCollectionFilms } from 'api/getFilms'\nimport MoviesList from 'components/MoviesList/MoviesList'\nimport { useEffect, useState } from 'react'\n\nconst Home = () => {\n\n  const [error, setError] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [films, setFilms] = useState(null)\n\n\n  useEffect(() => {\n    const fetchFilms = (async () => {\n      try {\n        setIsLoading(true)\n        setFilms(null)\n        const data = await getCollectionFilms()\n        setFilms(data.results)\n      } catch (error) {\n        setError(error.response.data)\n      } finally {\n        setIsLoading(false)\n      }\n    })\n    fetchFilms()\n  }, [])\n\n  return (\n    <>\n      {error && <h1>{error}</h1>}\n\n      {\n        isLoading\n          ? <h1>Loading</h1>\n          : <div>\n            <h1>Trending today</h1>\n            <MoviesList films={films} stateFrom=\"/\"/>\n          </div>\n      }\n    </>\n  )\n}\nexport default Home\n"],"names":["axios","getCollectionFilms","method","url","data","getMovieDetails","movieId","getCast","getReviews","getFilmsBySearch","query","films","location","useLocation","map","film","style","listStyleType","to","id","state","from","original_title","useState","error","setError","isLoading","setIsLoading","setFilms","useEffect","fetchFilms","results","response","stateFrom"],"sourceRoot":""}