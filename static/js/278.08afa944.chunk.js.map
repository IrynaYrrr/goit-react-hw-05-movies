{"version":3,"file":"static/js/278.08afa944.chunk.js","mappings":"uRAEaA,EAAkB,mCAAG,uGACTC,EAAAA,EAAAA,GAAM,CAC3BC,OAAQ,MACRC,IAAK,mEACLC,QAAQ,CACNC,cAAe,6NACfC,OAAQ,sBANoB,uBACxBC,EADwB,EACxBA,KADwB,kBASzBA,GATyB,2CAAH,qDAYlBC,EAAO,mCAAG,WAAOC,GAAP,0FACER,EAAAA,EAAAA,GAAM,CAC3BC,OAAQ,MACRC,IAAI,sCAAD,OAAwCM,EAAxC,4BACHL,QAAQ,CACNC,cAAe,6NACfC,OAAQ,sBANS,uBACbC,EADa,EACbA,KADa,kBASdA,GATc,2CAAH,sDAYPG,EAAU,mCAAG,WAAOD,GAAP,0FACDR,EAAAA,EAAAA,GAAM,CAC3BC,OAAQ,MACRC,IAAI,sCAAD,OAAwCM,EAAxC,kCACHL,QAAQ,CACNC,cAAe,6NACfC,OAAQ,sBANY,uBAChBC,EADgB,EAChBA,KADgB,kBASjBA,GATiB,2CAAH,sDAYVI,EAAgB,mCAAG,WAAOC,GAAP,0FACPX,EAAAA,EAAAA,GAAM,CAC3BC,OAAQ,MACRC,IAAI,mDAAD,OAAqDS,EAArD,8CACHR,QAAQ,CACNC,cAAe,6NACfC,OAAQ,sBANkB,uBACtBC,EADsB,EACtBA,KADsB,kBASvBA,GATuB,2CAAH,qD,2CCvB7B,IAbmB,SAAC,GAAa,IAAZM,EAAW,EAAXA,MAEnB,OACI,wBACGA,GAASA,EAAMC,KAAI,SAACC,GAAD,OAClB,eAAIC,MAAO,CAAEC,cAAe,QAA5B,UACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,EAAKI,IAAMC,MAAOL,EAAvC,SAA8CA,EAAKM,kBADVN,EAAKI,GAD9B,KAO3B,C,iHCiDD,UAzDe,WAAO,IAAD,EACnB,GAA0BG,EAAAA,EAAAA,UAAS,IAAnC,eAAOV,EAAP,KAAcW,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAkCN,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KACA,GAA0BR,EAAAA,EAAAA,UAAS,MAAnC,eAAOT,EAAP,KAAckB,EAAd,KAGMC,EAAW,UAAGP,EAAaQ,IAAI,iBAApB,QAAiC,GA2BlD,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAI,WAAOvB,GAAP,uFAEhBkB,GAAa,GACbC,EAAS,MAHO,UAIGpB,EAAAA,EAAAA,IAAiBC,GAJpB,OAIVL,EAJU,OAKhBwB,EAASxB,EAAK6B,SALE,gDAOhBR,EAAS,KAAMS,SAAS9B,MAPR,yBAShBuB,GAAa,GATG,4EAAJ,sDAYhBK,EAAWH,EACZ,GAAE,CAACA,KAGF,gCACGL,IAAS,wBAAKA,IAEbE,GACI,qCACA,kBAAMS,SA/BK,SAACC,GACpBA,EAAEC,iBACFd,EAAgB,CAAEe,OAAQ7B,GAC3B,EA4BS,WACA,kBACE8B,KAAK,QACLC,KAAK,OACLC,UAAU,eACVzB,GAAG,mBACH0B,MAAOjC,EACPkC,SAjCS,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MAChCtB,EAASsB,EACV,KAiCS,uCACCjC,IAAS,SAAC,IAAD,CAAYC,MAAOA,SAKxC,C","sources":["api/getFilms.jsx","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const getCollectionFilms = async () => {\n  const { data } = await axios({\n    method: \"get\",\n    url: \"https://api.themoviedb.org/3/movie/popular?language=en-US&page=1\",\n    headers:{\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYWRmOTEyZTExNzZhMTg1M2MxMzU2ZGI3MmFjMmFkYSIsInN1YiI6IjY1MmMwYWJjNzJjMTNlMDEzZDE1YzUzZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.hzf05Uu31G7_NhpUWVecKABBc5ROUSkbQVOs-Yw6zYQ',\n      Accept: 'application/json'\n    }\n  })\n  return data\n}\n\nexport const getCast = async (movieId) => {\n  const { data } = await axios({\n    method: \"get\",\n    url: `https://api.themoviedb.org/3/movie/${movieId}}/credits?language=en-US`,\n    headers:{\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYWRmOTEyZTExNzZhMTg1M2MxMzU2ZGI3MmFjMmFkYSIsInN1YiI6IjY1MmMwYWJjNzJjMTNlMDEzZDE1YzUzZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.hzf05Uu31G7_NhpUWVecKABBc5ROUSkbQVOs-Yw6zYQ',\n      Accept: 'application/json'\n    }\n  })\n  return data\n}\n\nexport const getReviews = async (movieId) => {\n  const { data } = await axios({\n    method: \"get\",\n    url: `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n    headers:{\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYWRmOTEyZTExNzZhMTg1M2MxMzU2ZGI3MmFjMmFkYSIsInN1YiI6IjY1MmMwYWJjNzJjMTNlMDEzZDE1YzUzZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.hzf05Uu31G7_NhpUWVecKABBc5ROUSkbQVOs-Yw6zYQ',\n      Accept: 'application/json'\n    }\n  })\n  return data\n}\n\nexport const getFilmsBySearch = async (query) => {\n  const { data } = await axios({\n    method: \"get\",\n    url: `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    headers:{\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYWRmOTEyZTExNzZhMTg1M2MxMzU2ZGI3MmFjMmFkYSIsInN1YiI6IjY1MmMwYWJjNzJjMTNlMDEzZDE1YzUzZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.hzf05Uu31G7_NhpUWVecKABBc5ROUSkbQVOs-Yw6zYQ',\n      Accept: 'application/json'\n    }\n  })\n  return data\n}\n","import { Link } from 'react-router-dom'\n\nconst MoviesList = ({films}) => {\n\n  return (\n      <ul>\n        {films && films.map((film) => (\n          <li style={{ listStyleType: 'none' }} key={film.id}>\n            <Link to={`/movies/${film.id}`} state={film}>{film.original_title}</Link>\n          </li>\n        ))}\n      </ul>\n  )\n}\n\nexport default MoviesList\n","import { getFilmsBySearch } from 'api/getFilms'\nimport MoviesList from 'components/MoviesList/MoviesList'\nimport React, { useEffect, useState } from 'react'\nimport { useSearchParams } from 'react-router-dom'\n\nconst Movies = () => {\n  const [query, setQuery] = useState('')\n  const [searchParams, setSearchParams] = useSearchParams()\n  const [error, setError] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [films, setFilms] = useState(null)\n\n\n  const searchQuery = searchParams.get('search') ?? ''\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setSearchParams({ search: query })\n  }\n\n  const handleChange = ({ target: { value } }) => {\n    setQuery(value)\n  }\n\n  useEffect(() => {\n    const fetchFilms = (async (query) => {\n      try {\n        setIsLoading(true)\n        setFilms(null)\n        const data = await getFilmsBySearch(query)\n        setFilms(data.results)\n      } catch (error) {\n        setError(error.response.data)\n      } finally {\n        setIsLoading(false)\n      }\n    })\n    fetchFilms(searchQuery)\n  }, [searchQuery])\n\n  return (\n    <>\n      {error && <h1>{error}</h1>}\n      {\n        isLoading\n          ? <h1>Loading</h1>\n          : <form onSubmit={handleSubmit}>\n            <input\n              name='title'\n              type='text'\n              className='form-control'\n              id='exampleInputTodo'\n              value={query}\n              onChange={handleChange}\n            />\n            <button>Search</button>\n            {query && <MoviesList films={films} />}\n          </form>\n      }\n    </>\n  )\n}\nexport default Movies\n"],"names":["getCollectionFilms","axios","method","url","headers","Authorization","Accept","data","getCast","movieId","getReviews","getFilmsBySearch","query","films","map","film","style","listStyleType","to","id","state","original_title","useState","setQuery","useSearchParams","searchParams","setSearchParams","error","setError","isLoading","setIsLoading","setFilms","searchQuery","get","useEffect","fetchFilms","results","response","onSubmit","e","preventDefault","search","name","type","className","value","onChange","target"],"sourceRoot":""}