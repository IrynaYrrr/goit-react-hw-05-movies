{"version":3,"file":"static/js/186.dacf51f8.chunk.js","mappings":"+PAEaA,EAAkB,mCAAG,uGACTC,EAAAA,EAAAA,GAAM,CAC3BC,OAAQ,MACRC,IAAK,mEACLC,QAAQ,CACNC,cAAe,6NACfC,OAAQ,sBANoB,uBACxBC,EADwB,EACxBA,KADwB,kBASzBA,GATyB,2CAAH,qDAYlBC,EAAO,mCAAG,WAAOC,GAAP,0FACER,EAAAA,EAAAA,GAAM,CAC3BC,OAAQ,MACRC,IAAI,sCAAD,OAAwCM,EAAxC,4BACHL,QAAQ,CACNC,cAAe,6NACfC,OAAQ,sBANS,uBACbC,EADa,EACbA,KADa,kBASdA,GATc,2CAAH,sDAYPG,EAAU,mCAAG,WAAOD,GAAP,0FACDR,EAAAA,EAAAA,GAAM,CAC3BC,OAAQ,MACRC,IAAI,sCAAD,OAAwCM,EAAxC,kCACHL,QAAQ,CACNC,cAAe,6NACfC,OAAQ,sBANY,uBAChBC,EADgB,EAChBA,KADgB,kBASjBA,GATiB,2CAAH,qD,yGCsBvB,UA5CgB,WAEd,OAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAcC,GAAd,WACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA8BH,EAAAA,EAAAA,UAAS,MAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAIQC,GAFSC,EAAAA,EAAAA,MAEOC,MAAhBF,GAEFG,GAAeC,EAAAA,EAAAA,aAAW,mCAAC,WAAOJ,GAAP,uFAE7BH,GAAa,GACbE,EAAW,MAHkB,UAIVN,EAAAA,EAAAA,IAAWO,GAJD,OAIvBV,EAJuB,OAM7BS,EAAWT,EAAKe,SANa,gDAQ7BV,EAAS,KAAMW,SAAShB,MARK,yBAU7BO,GAAa,GAVgB,4EAAD,sDAY7B,IAMH,OAJAU,EAAAA,EAAAA,YAAU,WACRJ,EAAaH,EACd,GAAE,CAACG,EAAcH,KAGhB,2BACGJ,IAAa,wCACd,wBACGE,GAAWA,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASV,EAApB,EAAoBA,GAApB,OACtB,gBAAIW,MAAO,CAAEC,cAAe,QAA5B,WACE,6BAAKH,MACL,kBACCC,IAHwCV,EADrB,QAU/B,C","sources":["api/getFilms.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const getCollectionFilms = async () => {\n  const { data } = await axios({\n    method: \"get\",\n    url: \"https://api.themoviedb.org/3/movie/popular?language=en-US&page=1\",\n    headers:{\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYWRmOTEyZTExNzZhMTg1M2MxMzU2ZGI3MmFjMmFkYSIsInN1YiI6IjY1MmMwYWJjNzJjMTNlMDEzZDE1YzUzZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.hzf05Uu31G7_NhpUWVecKABBc5ROUSkbQVOs-Yw6zYQ',\n      Accept: 'application/json'\n    }\n  })\n  return data\n}\n\nexport const getCast = async (movieId) => {\n  const { data } = await axios({\n    method: \"get\",\n    url: `https://api.themoviedb.org/3/movie/${movieId}}/credits?language=en-US`,\n    headers:{\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYWRmOTEyZTExNzZhMTg1M2MxMzU2ZGI3MmFjMmFkYSIsInN1YiI6IjY1MmMwYWJjNzJjMTNlMDEzZDE1YzUzZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.hzf05Uu31G7_NhpUWVecKABBc5ROUSkbQVOs-Yw6zYQ',\n      Accept: 'application/json'\n    }\n  })\n  return data\n}\n\nexport const getReviews = async (movieId) => {\n  const { data } = await axios({\n    method: \"get\",\n    url: `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n    headers:{\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYWRmOTEyZTExNzZhMTg1M2MxMzU2ZGI3MmFjMmFkYSIsInN1YiI6IjY1MmMwYWJjNzJjMTNlMDEzZDE1YzUzZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.hzf05Uu31G7_NhpUWVecKABBc5ROUSkbQVOs-Yw6zYQ',\n      Accept: 'application/json'\n    }\n  })\n  return data\n}\n\nexport const getFilmsBySearch = async (query) => {\n  const { data } = await axios({\n    method: \"get\",\n    url: `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    headers:{\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYWRmOTEyZTExNzZhMTg1M2MxMzU2ZGI3MmFjMmFkYSIsInN1YiI6IjY1MmMwYWJjNzJjMTNlMDEzZDE1YzUzZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.hzf05Uu31G7_NhpUWVecKABBc5ROUSkbQVOs-Yw6zYQ',\n      Accept: 'application/json'\n    }\n  })\n  return data\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { getReviews } from 'api/getFilms'\n\nconst Reviews = () => {\n  // eslint-disable-next-line no-unused-vars\n  const [error, setError] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [reviews, setReviews] = useState(null)\n\n  const location = useLocation()\n\n  const { id } = location.state;\n\n  const fetchReviews = useCallback(async (id) => {\n    try {\n      setIsLoading(true)\n      setReviews(null)\n      const data = await getReviews(id)\n\n      setReviews(data.results)\n    } catch (error) {\n      setError(error.response.data)\n    } finally {\n      setIsLoading(false)\n    }\n  }, [])\n\n  useEffect(() => {\n    fetchReviews(id)\n  }, [fetchReviews, id])\n\n  return (\n    <div>\n      {isLoading && <h1>Loading...</h1>}\n      <ul>\n        {reviews && reviews.map(({ author, content, id }) => (\n          <li style={{ listStyleType: 'none' }} key={id}>\n            <b> {author}</b>\n            <br />\n            {content}\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default Reviews\n"],"names":["getCollectionFilms","axios","method","url","headers","Authorization","Accept","data","getCast","movieId","getReviews","useState","setError","isLoading","setIsLoading","reviews","setReviews","id","useLocation","state","fetchReviews","useCallback","results","response","useEffect","map","author","content","style","listStyleType"],"sourceRoot":""}